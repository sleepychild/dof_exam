main:
----------
          ID: deploy
    Function: cmd.run
        Name: /sync/scripts/tfdeploy.sh app
      Result: True
     Comment: Command "/sync/scripts/tfdeploy.sh app" run
     Started: 07:29:37.601195
    Duration: 44739.338 ms
     Changes:   
              ----------
              pid:
                  24757
              retcode:
                  0
              stderr:
              stdout:
                  /sync/tf/app /root
                  
                  ?[0m?[1mInitializing the backend...?[0m
                  
                  ?[0m?[1mInitializing provider plugins...?[0m
                  - Reusing previous version of hashicorp/null from the dependency lock file
                  - Reusing previous version of kreuzwerker/docker from the dependency lock file
                  - Using previously-installed hashicorp/null v3.1.0
                  - Using previously-installed kreuzwerker/docker v2.14.0
                  
                  ?[0m?[1m?[32mTerraform has been successfully initialized!?[0m?[32m?[0m
                  ?[0m?[32m
                  You may now begin working with Terraform. Try running "terraform plan" to see
                  any changes that are required for your infrastructure. All Terraform commands
                  should now work.
                  
                  If you ever set or change modules or backend configuration for Terraform,
                  rerun this command to reinitialize your working directory. If you forget, other
                  commands will detect it and remind you to do so if necessary.?[0m
                  ?[32m?[1mSuccess!?[0m The configuration is valid.
                  ?[0m
                  ?[0m?[1mnull_resource.files: Refreshing state... [id=4334787745801489729]?[0m
                  
                  Terraform used the selected providers to generate the following execution
                  plan. Resource actions are indicated with the following symbols:
                    ?[32m+?[0m create
                  ?[0m
                  Terraform will perform the following actions:
                  
                  ?[1m  # docker_container.app1?[0m will be created?[0m?[0m
                  ?[0m  ?[32m+?[0m?[0m resource "docker_container" "app1" {
                        ?[32m+?[0m ?[0m?[1m?[0mattach?[0m?[0m           = false
                        ?[32m+?[0m ?[0m?[1m?[0mbridge?[0m?[0m           = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mcommand?[0m?[0m          = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mcontainer_logs?[0m?[0m   = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mentrypoint?[0m?[0m       = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0menv?[0m?[0m              = [
                            ?[32m+?[0m ?[0m"APP_VARIABLE=@sleepychild",
                          ]
                        ?[32m+?[0m ?[0m?[1m?[0mexit_code?[0m?[0m        = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mgateway?[0m?[0m          = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mhostname?[0m?[0m         = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mid?[0m?[0m               = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mimage?[0m?[0m            = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0minit?[0m?[0m             = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mip_address?[0m?[0m       = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mip_prefix_length?[0m?[0m = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mipc_mode?[0m?[0m         = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mlog_driver?[0m?[0m       = "json-file"
                        ?[32m+?[0m ?[0m?[1m?[0mlogs?[0m?[0m             = false
                        ?[32m+?[0m ?[0m?[1m?[0mmust_run?[0m?[0m         = true
                        ?[32m+?[0m ?[0m?[1m?[0mname?[0m?[0m             = "app1"
                        ?[32m+?[0m ?[0m?[1m?[0mnetwork_data?[0m?[0m     = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mread_only?[0m?[0m        = false
                        ?[32m+?[0m ?[0m?[1m?[0mremove_volumes?[0m?[0m   = true
                        ?[32m+?[0m ?[0m?[1m?[0mrestart?[0m?[0m          = "no"
                        ?[32m+?[0m ?[0m?[1m?[0mrm?[0m?[0m               = false
                        ?[32m+?[0m ?[0m?[1m?[0msecurity_opts?[0m?[0m    = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mshm_size?[0m?[0m         = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mstart?[0m?[0m            = true
                        ?[32m+?[0m ?[0m?[1m?[0mstdin_open?[0m?[0m       = false
                        ?[32m+?[0m ?[0m?[1m?[0mtty?[0m?[0m              = false
                  
                        ?[32m+?[0m ?[0mhealthcheck {
                            ?[32m+?[0m ?[0m?[1m?[0minterval?[0m?[0m     = (known after apply)
                            ?[32m+?[0m ?[0m?[1m?[0mretries?[0m?[0m      = (known after apply)
                            ?[32m+?[0m ?[0m?[1m?[0mstart_period?[0m?[0m = (known after apply)
                            ?[32m+?[0m ?[0m?[1m?[0mtest?[0m?[0m         = (known after apply)
                            ?[32m+?[0m ?[0m?[1m?[0mtimeout?[0m?[0m      = (known after apply)
                          }
                  
                        ?[32m+?[0m ?[0mlabels {
                            ?[32m+?[0m ?[0m?[1m?[0mlabel?[0m?[0m = (known after apply)
                            ?[32m+?[0m ?[0m?[1m?[0mvalue?[0m?[0m = (known after apply)
                          }
                  
                        ?[32m+?[0m ?[0mports {
                            ?[32m+?[0m ?[0m?[1m?[0mexternal?[0m?[0m = 8080
                            ?[32m+?[0m ?[0m?[1m?[0minternal?[0m?[0m = 80
                            ?[32m+?[0m ?[0m?[1m?[0mip?[0m?[0m       = "0.0.0.0"
                            ?[32m+?[0m ?[0m?[1m?[0mprotocol?[0m?[0m = "tcp"
                          }
                  
                        ?[32m+?[0m ?[0mvolumes {
                            ?[32m+?[0m ?[0m?[1m?[0mcontainer_path?[0m?[0m = "/var/www/html"
                            ?[32m+?[0m ?[0m?[1m?[0mhost_path?[0m?[0m      = "/sync/tf/app/project/app1/image/app/"
                            ?[32m+?[0m ?[0m?[1m?[0mread_only?[0m?[0m      = true
                          }
                      }
                  
                  ?[1m  # docker_image.app1?[0m will be created?[0m?[0m
                  ?[0m  ?[32m+?[0m?[0m resource "docker_image" "app1" {
                        ?[32m+?[0m ?[0m?[1m?[0mid?[0m?[0m          = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mlatest?[0m?[0m      = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mname?[0m?[0m        = "app1"
                        ?[32m+?[0m ?[0m?[1m?[0moutput?[0m?[0m      = (known after apply)
                        ?[32m+?[0m ?[0m?[1m?[0mrepo_digest?[0m?[0m = (known after apply)
                  
                        ?[32m+?[0m ?[0mbuild {
                            ?[32m+?[0m ?[0m?[1m?[0mdockerfile?[0m?[0m = "Dockerfile"
                            ?[32m+?[0m ?[0m?[1m?[0mpath?[0m?[0m       = "/sync/tf/app/project/app1/image/."
                            ?[32m+?[0m ?[0m?[1m?[0mremove?[0m?[0m     = true
                            ?[32m+?[0m ?[0m?[1m?[0mtag?[0m?[0m        = []
                          }
                      }
                  
                  ?[0m?[1mPlan:?[0m 2 to add, 0 to change, 0 to destroy.
                  ?[0m?[90m
                  ─────────────────────────────────────────────────────────────────────────────?[0m
                  
                  Saved the plan to: main.plan
                  
                  To perform exactly these actions, run the following command to apply:
                      terraform apply "main.plan"
                  ?[0m?[1mdocker_image.app1: Creating...?[0m?[0m
                  ?[0m?[1mdocker_image.app1: Still creating... [10s elapsed]?[0m?[0m
                  ?[0m?[1mdocker_image.app1: Still creating... [20s elapsed]?[0m?[0m
                  ?[0m?[1mdocker_image.app1: Still creating... [30s elapsed]?[0m?[0m
                  ?[0m?[1mdocker_image.app1: Still creating... [40s elapsed]?[0m?[0m
                  ?[0m?[1mdocker_image.app1: Creation complete after 40s [id=sha256:103fde83bf7f6e7fc86563969dc6ba54228cc0ffea076bdb1632381921cb6123app1]?[0m
                  ?[0m?[1mdocker_container.app1: Creating...?[0m?[0m
                  ?[0m?[1mdocker_container.app1: Creation complete after 0s [id=151812ce3fd2b88816d5c8d435d0a048c90b533aef04d2400a1c61f3a17bd08d]?[0m
                  ?[0m?[1m?[32m
                  Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
                  ?[0m/root
----------
          ID: check
    Function: cmd.run
        Name: curl "http://localhost:8080"
      Result: True
     Comment: Command "curl "http://localhost:8080"" run
     Started: 07:30:22.341215
    Duration: 14.458 ms
     Changes:   
              ----------
              pid:
                  25665
              retcode:
                  0
              stderr:
                    % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                                   Dload  Upload   Total   Spent    Left  Speed
                  
                    0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
                  100   221  100   221    0     0   107k      0 --:--:-- --:--:-- --:--:--  107k
              stdout:
                  <html>
                  	<head>
                  		<title>Hello to You</title>
                  	</head>
                  	<body style="background-color: #ffffff;">
                  		<div align="center">
                  		
                  <h2>Hello, @sleepychild!</h2>
                  <h3>Congratulations! You made it! :)</h3>
                  		</div>
                  	</body>
                  </html>

Summary for main
------------
Succeeded: 2 (changed=2)
Failed:    0
------------
Total states run:     2
Total run time:  44.754 s
