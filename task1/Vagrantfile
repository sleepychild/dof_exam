# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  # Default config
  config.ssh.insert_key = false
  config.vm.box = "ubuntu/focal64"

  # Provison
  config.vm.synced_folder "sync", "/sync"
  config.vm.provision "shell", path: "provision/set_hosts.sh"
  config.vm.provision "shell", path: "provision/fix_ssh.sh"
  config.vm.provision "shell", path: "provision/disable_ufw.sh"

  # Main node
  config.vm.define "main" do |node|
    node.vm.hostname = "main"

    node.vm.provider :virtualbox do |config_vbox|
      config_vbox.customize ["modifyvm", :id, "--memory", "4096"] 
    end

    node.trigger.after :up do |trigger|
      trigger.run_remote = {
        path: "sync/scripts/salt_init.sh",
        args: ["*", "main"]
      }
    end

    # Main box network definitions and port expose
    node.vm.network "private_network",
      name: "vboxnet0",
      ip: "192.168.120.100",
      netmask: "24",
      hostname: true

    # http-alt
    node.vm.network "forwarded_port",
      guest: 8080, 
      host: 8080, 
      auto_correct: true

    # Main box salt master
    node.vm.provision :salt do |salt|
      salt.colorize = true
      salt.log_level = "all"
      salt.verbose = true
      salt.install_type = "stable"

      salt.install_master = true
      salt.no_minion = false
      salt.master_config = "sync/salt/conf/master.yml"
      salt.minion_config = "sync/salt/conf/minion.yml"

      salt.master_key = "sync/salt/key/main.pem"
      salt.master_pub = "sync/salt/key/main.pub"
      salt.minion_key = "sync/salt/key/main.pem"
      salt.minion_pub = "sync/salt/key/main.pub"

      salt.seed_master = {
        "main" => "sync/salt/key/main.pub",
      }
    end
  end
end
